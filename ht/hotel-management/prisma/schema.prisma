// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(uuid())
  name         String
  email        String    @unique
  phone        String?
  password     String    // Add this field
  role         UserRole  @default(GUEST) // Add this field
  checkInDate  DateTime? @map("check_in_date")
  checkOutDate DateTime? @map("check_out_date")
  roomNumber   Int?      @map("room_number")
  isActive     Boolean   @map("is_active")
  profileImage  String?  @map("profile_image")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  bookings Booking[]
}

model Room {
  id          String       @id @default(uuid())
  roomNumber  String    @unique
  floor       Int
  isAvailable Boolean
  isClean     Boolean
  lastCleaned DateTime?
  roomTypeId  String
  images      String[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  //Relations
  roomType RoomType  @relation(fields: [roomTypeId], references: [id])
  bookings Booking[]
}

model RoomType {
  id          String      @id @default(uuid())
  name        String   @unique
  description String?
  basePrice   Decimal
  maxCapacity Int
  amenities   String[]
  images      String[]  @default([])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  rooms Room[]
}

model Booking {
  id              String           @id @default(uuid())
  userId          String
  roomId          String
  checkInDate     DateTime
  checkOutDate    DateTime
  totalAmount     Decimal
  status          BookingStatus
  specialRequests String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now())

  user User @relation(fields: [userId], references: [id])
  room Room @relation(fields: [roomId], references: [id])
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CHECKED_IN
  CHECKED_OUT
  CANCELLED
}

enum UserRole {
  ADMIN
  STAFF
  MANAGER
  GUEST
}
